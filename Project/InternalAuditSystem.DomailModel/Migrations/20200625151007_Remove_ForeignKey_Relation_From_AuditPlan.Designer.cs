// <auto-generated />
using System;
using System.Collections.Generic;
using InternalAuditSystem.DomailModel.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace InternalAuditSystem.DomailModel.Migrations
{
    [DbContext(typeof(InternalAuditSystemContext))]
    [Migration("20200625151007_Remove_ForeignKey_Relation_From_AuditPlan")]
    partial class Remove_ForeignKey_Relation_From_AuditPlan
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ACMPresentation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ACMReportStatus")
                        .HasColumnType("integer");

                    b.Property<string>("ACMReportTitle")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Heading")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Implication")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<string>("Recommendation")
                        .HasColumnType("text");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("Version")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ReportId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ACMPresentation");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ACMPresentationModels.ACMDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ACMPresentationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DocumentPath")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ACMPresentationId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ACMDocument");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ACMPresentationModels.ACMReportMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ACMPresentationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ReprotId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ACMPresentationId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ReportId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ACMReportMapping");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ACMPresentationModels.ACMUserTeam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ACMPresentationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ACMPresentationId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("UserId");

                    b.ToTable("ACMUserTeam");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditPlanModels.AuditCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("AuditCategory");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditPlanModels.AuditPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<int>("FinancialYear")
                        .HasColumnType("integer")
                        .HasMaxLength(4);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("OverviewBackground")
                        .HasColumnType("text");

                    b.Property<Guid?>("SelectCategoryId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("SelectedTypeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("StartDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<double>("TotalBudgetedHours")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("Version")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("AuditPlan");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditPlanModels.AuditPlanDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Path")
                        .HasColumnType("text");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uuid");

                    b.Property<string>("Purpose")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("PlanId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("AuditPlanDocument");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditPlanModels.AuditType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("AuditType");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditPlanModels.PlanProcessMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("WorkProgramId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("PlanId");

                    b.HasIndex("ProcessId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("WorkProgramId");

                    b.ToTable("PlanProcessMapping");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditPlanModels.Process", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<string>("ScopeBasedOn")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("ParentId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Process");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStrategyAnalysisDone")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("SelectedCategoryId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("SelectedTypeId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("Version")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("SelectedCategoryId");

                    b.HasIndex("SelectedTypeId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("AuditableEntity");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.Division", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Division");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.EntityCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CategoryName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("EntityCategory");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.EntityCountry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("RegionId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("EntityCountry");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.EntityDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Path")
                        .HasColumnType("text");

                    b.Property<string>("Purpose")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("EntityDocument");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.EntityRelationMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("RelatedEntityId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RelationTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("RelationTypeId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("EntityRelationMapping");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.EntityState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityCountryId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("StateId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityCountryId");

                    b.HasIndex("EntityId");

                    b.HasIndex("StateId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("EntityState");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.EntityType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("TypeName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("EntityType");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.PrimaryGeograhcialArea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityCountryId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityStateId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityCountryId");

                    b.HasIndex("EntityId");

                    b.HasIndex("EntityStateId");

                    b.HasIndex("LocationId");

                    b.HasIndex("RegionId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("PrimaryGeograhcialArea");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.ProvinceState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ProvinceState");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.RelationshipType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("RelationshipType");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.RiskAssessment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Summary")
                        .HasColumnType("text");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasMaxLength(4);

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("RiskAssessment");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.RiskAssessmentDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Path")
                        .HasColumnType("text");

                    b.Property<Guid>("RiskAssessmentId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("RiskAssessmentId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("RiskAssessmentDocument");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.EntityUserMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("UserId");

                    b.ToTable("EntityUserMapping");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.MomModels.MainDiscussionPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("MainPoint")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid>("MomId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("MomId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("MainDiscussionPoint");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.MomModels.Mom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Agenda")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime>("ClosureMeetingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("MomDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("MomEndTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("MomStartTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("WorkProgramId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("WorkProgramId");

                    b.ToTable("MomDetail");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.MomModels.MomUserMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MomId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("SubPointOfDiscussionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("MomId");

                    b.HasIndex("SubPointOfDiscussionId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("UserId");

                    b.ToTable("MomUserMapping");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.MomModels.SubPointOfDiscussion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MainPointId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MomId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("SubPoint")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime>("TargetDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("MainPointId");

                    b.HasIndex("MomId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("SubPointOfDiscussion");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ObservationManagement.Observation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Background")
                        .HasColumnType("text");

                    b.Property<string>("Conclusion")
                        .HasColumnType("text");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Disposition")
                        .HasColumnType("integer");

                    b.Property<string>("Heading")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Implication")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRepeatObservation")
                        .HasColumnType("boolean");

                    b.Property<string>("LinkedObservation")
                        .HasColumnType("text");

                    b.Property<string>("ManagementResponse")
                        .HasColumnType("text");

                    b.Property<Guid>("ObservationCategoryId")
                        .HasColumnType("uuid");

                    b.Property<int>("ObservationStatus")
                        .HasColumnType("integer");

                    b.Property<int>("ObservationType")
                        .HasColumnType("integer");

                    b.Property<string>("Observations")
                        .HasColumnType("text");

                    b.Property<Guid>("PersonResponsible")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RcmId")
                        .HasColumnType("uuid");

                    b.Property<string>("Recommendation")
                        .HasColumnType("text");

                    b.Property<string>("RelatedObservation")
                        .HasColumnType("text");

                    b.Property<Guid?>("RiskAndControlId")
                        .HasColumnType("uuid");

                    b.Property<string>("RootCause")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("SubProcessId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("TargetDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ObservationCategoryId");

                    b.HasIndex("ProcessId");

                    b.HasIndex("RiskAndControlId");

                    b.HasIndex("SubProcessId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Observation");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ObservationManagement.ObservationCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CategoryName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("ParentId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ObservationCategory");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ObservationManagement.ObservationDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DocumentFor")
                        .HasColumnType("integer");

                    b.Property<string>("DocumentPath")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ObservationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ObservationId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ObservationDocuments");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportManagement.Distributors", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("UserId");

                    b.ToTable("Distributor");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportManagement.Rating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Legend")
                        .HasColumnType("text");

                    b.Property<string>("QualitativeFactors")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("QuantitativeFactors")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Ratings")
                        .HasColumnType("character varying(12)")
                        .HasMaxLength(12);

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportManagement.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("AuditPeriodEndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("AuditPeriodStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("AuditStatus")
                        .HasColumnType("integer");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("RatingId")
                        .HasColumnType("uuid");

                    b.Property<string>("ReportTitle")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<int>("Stage")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EntityId");

                    b.HasIndex("RatingId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportManagement.ReportComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ReportId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ReportComment");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportManagement.ReportObservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AuditorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Background")
                        .HasColumnType("text");

                    b.Property<string>("Conclusion")
                        .HasColumnType("text");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Disposition")
                        .HasColumnType("integer");

                    b.Property<string>("Heading")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Implication")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRepeatObservation")
                        .HasColumnType("boolean");

                    b.Property<string>("LinkedObservation")
                        .HasColumnType("text");

                    b.Property<string>("ManagementResponse")
                        .HasColumnType("text");

                    b.Property<string>("Observation")
                        .HasColumnType("text");

                    b.Property<Guid>("ObservationCategoryId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ObservationId")
                        .HasColumnType("uuid");

                    b.Property<int>("ObservationStatus")
                        .HasColumnType("integer");

                    b.Property<string>("ObservationTitle")
                        .HasColumnType("text");

                    b.Property<Guid>("ProcessId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RatingId")
                        .HasColumnType("uuid");

                    b.Property<string>("Recommendation")
                        .HasColumnType("text");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<string>("RootCause")
                        .HasColumnType("text");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<Guid?>("SubProcessId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("TargetDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TypeOfObservation")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuditorId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ObservationCategoryId");

                    b.HasIndex("ObservationId");

                    b.HasIndex("ProcessId");

                    b.HasIndex("RatingId");

                    b.HasIndex("ReportId");

                    b.HasIndex("SubProcessId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ReportObservation");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportManagement.ReportUserMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uuid");

                    b.Property<int>("ReportUserType")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ReportId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("UserId");

                    b.ToTable("ReportUserMapping");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportManagement.ReviewerDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DocumentPath")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportUserMappingId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ReportUserMappingId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ReviewerDocument");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportObservationReviewer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportObservationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ReportObservationId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("UserId");

                    b.ToTable("ReportObservationReviewer");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportObservationsDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DocumentFor")
                        .HasColumnType("integer");

                    b.Property<string>("DocumentPath")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportObservationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ReportObservationId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("ReportObservationDocument");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportObservationsMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ReportObservationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ReportObservationId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("UserId");

                    b.ToTable("ReportObservationMember");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.RiskAndControlModels.RiskControlMatrix", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AntiFraudControl")
                        .HasColumnType("boolean");

                    b.Property<int>("ControlCategory")
                        .HasColumnType("integer");

                    b.Property<string>("ControlDescription")
                        .HasColumnType("text");

                    b.Property<string>("ControlObjective")
                        .HasColumnType("text");

                    b.Property<int>("ControlType")
                        .HasColumnType("integer");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("NatureOfControl")
                        .HasColumnType("integer");

                    b.Property<Guid>("RcmProcessId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RcmSubProcessId")
                        .HasColumnType("uuid");

                    b.Property<string>("RiskCategory")
                        .HasColumnType("text");

                    b.Property<string>("RiskDescription")
                        .HasColumnType("text");

                    b.Property<string>("RiskName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid>("SectorId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("StrategicAnalysisId")
                        .HasColumnType("uuid");

                    b.Property<bool?>("TestResults")
                        .HasColumnType("boolean");

                    b.Property<string>("TestSteps")
                        .HasColumnType("text");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("WorkProgramId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("RcmProcessId");

                    b.HasIndex("RcmSubProcessId");

                    b.HasIndex("SectorId");

                    b.HasIndex("StrategicAnalysisId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("WorkProgramId");

                    b.ToTable("RiskControlMatrix");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.RiskAndControlModels.RiskControlMatrixProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Process")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("RiskControlMatrixProcess");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.RiskAndControlModels.RiskControlMatrixSector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Sector")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("RiskControlMatrixSector");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.RiskAndControlModels.RiskControlMatrixSubProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("SubProcess")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("RiskControlMatrixSubProcess");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.UserModels.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Department")
                        .HasColumnType("text");

                    b.Property<string>("Designation")
                        .HasColumnType("text");

                    b.Property<string>("EmailId")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastInterectedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("UserType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("User");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.WorkProgramModels.WorkPaper", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DocumentPath")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("WorkProgramId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("WorkProgramId");

                    b.ToTable("WorkPaper");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.WorkProgramModels.WorkProgram", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("AuditPeriodEndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("AuditPeriodStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("AuditTitle")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DraftIssues")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Scope")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("WorkProgram");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.WorkProgramModels.WorkProgramTeam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("WorkProgramId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkProgramId");

                    b.ToTable("WorkProgramTeam");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.AzureAdModel.AzureAccessToken", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccessToken")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TokenType")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("AzureAccessToken");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.CheckboxQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FieldLabel")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOtherToBeShown")
                        .HasColumnType("boolean");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uuid");

                    b.Property<int?>("RelatedAnswer")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("CheckboxQuestion");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.DropdownQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uuid");

                    b.Property<int?>("RelatedAnswer")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("DropdownQuestion");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.FileUploadQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Guidance")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDocAllowed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsGifAllowed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsJpegAllowed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPdfAllowed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPngAllowed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPpxAllowed")
                        .HasColumnType("boolean");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("FileUploadQuestion");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.MultipleChoiceQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FieldLabel")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOtherToBeShown")
                        .HasColumnType("boolean");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uuid");

                    b.Property<int?>("RelatedAnswer")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("MultipleChoiceQuestion");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.Option", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CheckboxQuestionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DropdownQuestionId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("MultipleChoiceQuestionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("OptionIds")
                        .HasColumnType("uuid");

                    b.Property<string>("OptionText")
                        .HasColumnType("text");

                    b.Property<Guid?>("RatingQuestionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CheckboxQuestionId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DropdownQuestionId");

                    b.HasIndex("MultipleChoiceQuestionId");

                    b.HasIndex("OptionIds");

                    b.HasIndex("RatingQuestionId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Option");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("boolean");

                    b.Property<string>("QuestionText")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid>("StrategyAnalysisId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("StrategyAnalysisId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.RatingScaleQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EndLabel")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Representation")
                        .HasColumnType("text");

                    b.Property<List<int>>("ResultSmileyList")
                        .HasColumnType("integer[]");

                    b.Property<int>("ScaleEnd")
                        .HasColumnType("integer");

                    b.Property<int>("ScaleStart")
                        .HasColumnType("integer");

                    b.Property<string>("StartLabel")
                        .HasColumnType("text");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("RatingScaleQuestion");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.StrategicAnalysis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuditableEntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("AuditableEntityName")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DetailsOfOpportunity")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("EstimatedValueOfOpportunity")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSampling")
                        .HasColumnType("boolean");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("SurveyTitle")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("Version")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("AuditableEntityId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("StrategyAnalysis");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.StrategicAnalysisTeam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("StrategicAnalysisId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("StrategicAnalysisId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("UserId");

                    b.ToTable("StrategicAnalysisTeam");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.SubjectiveQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CharacterLowerLimit")
                        .HasColumnType("integer");

                    b.Property<int>("CharacterUpperLimit")
                        .HasColumnType("integer");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Guidance")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("SubjectiveQuestion");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.TextboxQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CharacterLowerLimit")
                        .HasColumnType("integer");

                    b.Property<int>("CharacterUpperLimit")
                        .HasColumnType("integer");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Guidance")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.ToTable("TextboxQuestion");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.UserResponse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AnswerText")
                        .HasColumnType("text");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<List<Guid>>("OptionIds")
                        .HasColumnType("uuid[]");

                    b.Property<string>("Other")
                        .HasColumnType("text");

                    b.Property<Guid?>("QuestionId")
                        .HasColumnType("uuid");

                    b.Property<int?>("RepresentationNumber")
                        .HasColumnType("integer");

                    b.Property<string>("SelectedDropdownOption")
                        .HasColumnType("text");

                    b.Property<Guid>("StrategicAnalysisId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int>("UserResponseStatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("QuestionId");

                    b.HasIndex("StrategicAnalysisId");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("UserId");

                    b.ToTable("UserResponse");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.UserResponseDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Path")
                        .HasColumnType("text");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UserResponseId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("UserResponseId");

                    b.ToTable("UserResponseDocument");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ACMPresentation", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.ReportManagement.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ACMPresentationModels.ACMDocument", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.ACMPresentation", "ACMPresentation")
                        .WithMany()
                        .HasForeignKey("ACMPresentationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ACMPresentationModels.ACMReportMapping", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.ACMPresentation", "ACMPresentation")
                        .WithMany()
                        .HasForeignKey("ACMPresentationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.ReportManagement.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ACMPresentationModels.ACMUserTeam", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.ACMPresentation", "ACMPresentation")
                        .WithMany()
                        .HasForeignKey("ACMPresentationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditPlanModels.AuditCategory", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditPlanModels.AuditPlan", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditPlanModels.AuditPlanDocument", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditPlanModels.AuditPlan", "AuditPlan")
                        .WithMany()
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditPlanModels.AuditType", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditPlanModels.PlanProcessMapping", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditPlanModels.AuditPlan", "AuditPlan")
                        .WithMany()
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditPlanModels.Process", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.WorkProgramModels.WorkProgram", "WorkProgram")
                        .WithMany()
                        .HasForeignKey("WorkProgramId");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditPlanModels.Process", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditPlanModels.Process", "ParentProcess")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditPlanModels.AuditCategory", "AuditCategory")
                        .WithMany()
                        .HasForeignKey("SelectedCategoryId");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditPlanModels.AuditType", "AuditType")
                        .WithMany()
                        .HasForeignKey("SelectedTypeId");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.Country", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.Division", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.EntityCategory", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.EntityCountry", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.EntityDocument", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.EntityRelationMapping", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.RelationshipType", "RelationshipType")
                        .WithMany()
                        .HasForeignKey("RelationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.EntityState", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.EntityCountry", "EntityCountry")
                        .WithMany()
                        .HasForeignKey("EntityCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.ProvinceState", "ProvinceState")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.EntityType", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.Location", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.PrimaryGeograhcialArea", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.EntityCountry", "EntityCountry")
                        .WithMany()
                        .HasForeignKey("EntityCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.EntityState", "EntityState")
                        .WithMany()
                        .HasForeignKey("EntityStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.ProvinceState", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.Region", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.RelationshipType", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.RiskAssessment", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.RiskAssessmentDocument", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.RiskAssessment", "RiskAssessment")
                        .WithMany()
                        .HasForeignKey("RiskAssessmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.EntityUserMapping", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.MomModels.MainDiscussionPoint", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.MomModels.Mom", "Mom")
                        .WithMany("MainDiscussionPointCollection")
                        .HasForeignKey("MomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.MomModels.Mom", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.WorkProgramModels.WorkProgram", "WorkProgram")
                        .WithMany()
                        .HasForeignKey("WorkProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.MomModels.MomUserMapping", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.MomModels.Mom", "Mom")
                        .WithMany("MomUserMappingCollection")
                        .HasForeignKey("MomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.MomModels.SubPointOfDiscussion", "SubPointOfDiscussion")
                        .WithMany("PersonResponsibleCollection")
                        .HasForeignKey("SubPointOfDiscussionId");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.MomModels.SubPointOfDiscussion", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.MomModels.MainDiscussionPoint", "MainDiscussionPoint")
                        .WithMany("SubPointDiscussionCollection")
                        .HasForeignKey("MainPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.MomModels.Mom", null)
                        .WithMany("SubPointDiscussionCollection")
                        .HasForeignKey("MomId");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ObservationManagement.Observation", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.ObservationManagement.ObservationCategory", "ObservationCategory")
                        .WithMany()
                        .HasForeignKey("ObservationCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditPlanModels.Process", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.RiskAndControlModels.RiskControlMatrix", "RiskControlMatrix")
                        .WithMany()
                        .HasForeignKey("RiskAndControlId");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditPlanModels.Process", "SubProcess")
                        .WithMany()
                        .HasForeignKey("SubProcessId");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ObservationManagement.ObservationCategory", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.ObservationManagement.ObservationCategory", "ParentObservationCategory")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ObservationManagement.ObservationDocument", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.ObservationManagement.Observation", "Observation")
                        .WithMany()
                        .HasForeignKey("ObservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportManagement.Distributors", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportManagement.Rating", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportManagement.Report", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.ReportManagement.Rating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportManagement.ReportComment", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.ReportManagement.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportManagement.ReportObservation", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "user")
                        .WithMany()
                        .HasForeignKey("AuditorId");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.ObservationManagement.ObservationCategory", "ObservationCategory")
                        .WithMany()
                        .HasForeignKey("ObservationCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.ObservationManagement.Observation", "ObservationDetail")
                        .WithMany()
                        .HasForeignKey("ObservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditPlanModels.Process", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.ReportManagement.Rating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingId");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.ReportManagement.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditPlanModels.Process", "SubProcess")
                        .WithMany()
                        .HasForeignKey("SubProcessId");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportManagement.ReportUserMapping", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.ReportManagement.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportManagement.ReviewerDocument", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.ReportManagement.ReportUserMapping", "ReportUserMapping")
                        .WithMany()
                        .HasForeignKey("ReportUserMappingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportObservationReviewer", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.ReportManagement.ReportObservation", "ReportObservation")
                        .WithMany()
                        .HasForeignKey("ReportObservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportObservationsDocument", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.ReportManagement.ReportObservation", "ReportObservation")
                        .WithMany()
                        .HasForeignKey("ReportObservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.ReportObservationsMember", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.ReportManagement.ReportObservation", "ReportObservation")
                        .WithMany()
                        .HasForeignKey("ReportObservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.RiskAndControlModels.RiskControlMatrix", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.RiskAndControlModels.RiskControlMatrixProcess", "RcmProcess")
                        .WithMany()
                        .HasForeignKey("RcmProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.RiskAndControlModels.RiskControlMatrixSubProcess", "RcmSubProcess")
                        .WithMany()
                        .HasForeignKey("RcmSubProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.RiskAndControlModels.RiskControlMatrixSector", "RcmSector")
                        .WithMany()
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.StrategicAnalysis", "StrategicAnalysis")
                        .WithMany()
                        .HasForeignKey("StrategicAnalysisId");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.WorkProgramModels.WorkProgram", "WorkProgram")
                        .WithMany()
                        .HasForeignKey("WorkProgramId");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.RiskAndControlModels.RiskControlMatrixProcess", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.RiskAndControlModels.RiskControlMatrixSector", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.RiskAndControlModels.RiskControlMatrixSubProcess", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.UserModels.User", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.WorkProgramModels.WorkPaper", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.WorkProgramModels.WorkProgram", "WorkProgram")
                        .WithMany()
                        .HasForeignKey("WorkProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.WorkProgramModels.WorkProgram", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomailModel.Models.WorkProgramModels.WorkProgramTeam", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.WorkProgramModels.WorkProgram", "WorkProgram")
                        .WithMany()
                        .HasForeignKey("WorkProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.CheckboxQuestion", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.Question", "Question")
                        .WithOne("CheckboxQuestion")
                        .HasForeignKey("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.CheckboxQuestion", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.DropdownQuestion", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.Question", "Question")
                        .WithOne("DropdownQuestion")
                        .HasForeignKey("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.DropdownQuestion", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.FileUploadQuestion", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.Question", "Question")
                        .WithOne("FileUploadQuestion")
                        .HasForeignKey("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.FileUploadQuestion", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.MultipleChoiceQuestion", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.Question", "Question")
                        .WithOne("MultipleChoiceQuestion")
                        .HasForeignKey("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.MultipleChoiceQuestion", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.Option", b =>
                {
                    b.HasOne("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.CheckboxQuestion", "CheckboxQuestionQuestion")
                        .WithMany()
                        .HasForeignKey("CheckboxQuestionId");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.DropdownQuestion", "DropdownQuestion")
                        .WithMany()
                        .HasForeignKey("DropdownQuestionId");

                    b.HasOne("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.MultipleChoiceQuestion", "MultipleChoiceQuestion")
                        .WithMany()
                        .HasForeignKey("MultipleChoiceQuestionId");

                    b.HasOne("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.UserResponse", null)
                        .WithMany("Options")
                        .HasForeignKey("OptionIds");

                    b.HasOne("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.RatingScaleQuestion", "RatingScaleQuestion")
                        .WithMany()
                        .HasForeignKey("RatingQuestionId");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.Question", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.StrategicAnalysis", "StrategyAnalysis")
                        .WithMany()
                        .HasForeignKey("StrategyAnalysisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.RatingScaleQuestion", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.Question", "Question")
                        .WithOne("RatingScaleQuestion")
                        .HasForeignKey("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.RatingScaleQuestion", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.StrategicAnalysis", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.AuditableEntityModels.AuditableEntity", "AuditableEntity")
                        .WithMany()
                        .HasForeignKey("AuditableEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.StrategicAnalysisTeam", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.StrategicAnalysis", "StrategicAnalysis")
                        .WithMany()
                        .HasForeignKey("StrategicAnalysisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.SubjectiveQuestion", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.Question", "Question")
                        .WithOne("SubjectiveQuestion")
                        .HasForeignKey("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.SubjectiveQuestion", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.TextboxQuestion", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.Question", "Question")
                        .WithOne("TextboxQuestion")
                        .HasForeignKey("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.TextboxQuestion", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.UserResponse", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");

                    b.HasOne("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.StrategicAnalysis", "StrategicAnalysis")
                        .WithMany()
                        .HasForeignKey("StrategicAnalysisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.UserResponseDocument", b =>
                {
                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("InternalAuditSystem.DomailModel.Models.UserModels.User", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.HasOne("InternalAuditSystem.DomainModel.Models.StrategicAnalysisModels.UserResponse", "UserResponse")
                        .WithMany()
                        .HasForeignKey("UserResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
